---
interface Event {
  frontmatter: {
    title: string;
    date: string;
  };
  compiledContent: () => string;
}

const events: Event[] = Object.values(
  await import.meta.glob("../../events/*.md", { eager: true })
);

const now = new Date();
const futureEvents = events.filter(
  (event: Event) => new Date(event.frontmatter.date) > now
);
const pastEvents = events.filter(
  (event: Event) => new Date(event.frontmatter.date) <= now
);

const formatDate = (date) =>
  new Date(date).toLocaleDateString("no-NO", {
    weekday: "short",
    year: "numeric",
    month: "long",
    day: "numeric",
  });
---

<section>
  <h2>Arrangementer</h2>
  {
    futureEvents.length === 0 ? (
      <p>Ingen arrangementer planlagt for Ã¸yeblikket</p>
    ) : (
      events.map((event) => (
        <details>
          <summary>
            <span>{event.frontmatter.title}</span>
            <p>{formatDate(event.frontmatter.date)}</p>
          </summary>
          <article set:html={event.compiledContent()} />
        </details>
      ))
    )
  }

  <h3>Tidligere arrangementer</h3>
  {
    pastEvents.length === 0 ? (
      <p>Ingen tidligere arrangementer</p>
    ) : (
      events.map((event) => (
        <details>
          <summary>
            <span>{event.frontmatter.title}</span>
            <p>{formatDate(event.frontmatter.date)}</p>
          </summary>

          <article set:html={event.compiledContent()} />
        </details>
      ))
    )
  }
</section>
